# 문제 및 해설 파일 (Exam Questions & Solutions)
# 작성일: 2025-02-19
# 담당자: 이동인

=========================================

문제 1. 다음 빈 칸을 채우시오. (주관식)
데이터베이스에서 두 개 이상의 테이블을 연결하여 원하는 데이터를 가져오는 것을 _______ 라고 한다.

**정답** 조인(Join)
**해설** 조인은 여러 테이블을 연관 지어 데이터를 조회하는 SQL 연산이다.

-----------------------------------------

문제 2. 중첩 루프 조인(Nested Loop Join)의 개념과 시간 복잡도를 설명하시오. (서술형)

**정답** 중첩 루프 조인은 한 테이블의 각 행에 대해 다른 테이블의 모든 행을 순차적으로 검사하여 조인하는 방법이다. 일반적으로 O(N*M)의 시간 복잡도를 가진다.
**해설** 작은 데이터셋에서는 성능이 괜찮지만, 데이터가 많아지면 비효율적이다. 대부분의 데이터베이스는 실행 계획을 최적화하여 필요할 때만 이 방법을 선택한다.

-----------------------------------------

문제 3. 정렬 병합 조인(Sort Merge Join)은 어떤 경우에 유리한가? (서술형)

**정답** 두 테이블이 조인 키를 기준으로 정렬되어 있거나 정렬 비용이 낮은 경우, 그리고 비등가 조인(>, <, >=, <=)에서 해시 조인을 사용할 수 없는 경우 유리하다.
**해설** 정렬 병합 조인은 O(NlogN + MlogM)의 시간 복잡도를 가지며, 두 테이블을 정렬 후 병합하는 방식으로 동작한다.

-----------------------------------------

문제 4. 해시 조인(Hash Join)의 동작 방식과 장단점을 설명하시오. (서술형)

**정답** 해시 조인은 작은 테이블을 해시 테이블로 생성한 후, 큰 테이블을 탐색하며 해시 값을 비교하여 조인하는 방식이다. O(N+M)의 시간 복잡도를 가지며, 등가 조인에서 효과적이지만, 비등가 조인에서는 사용할 수 없다. 또한, 메모리가 부족할 경우 성능이 저하될 수 있다.
**해설** 해시 조인은 빌드(Build) 단계와 프로브(Probe) 단계로 나뉜다. 작은 테이블을 기준으로 해시 테이블을 만들고, 다른 테이블을 탐색하면서 해시 값과 비교하여 조인한다.

-----------------------------------------

문제 5. 다음 빈 칸을 채우시오. (주관식)
트랜잭션이 데이터베이스에서 하나의 논리적 기능을 수행하기 위한 작업 단위를 의미하며, 이를 보장하기 위한 속성으로 ______가 있다.

**정답** ACID
**해설** ACID는 원자성(Atomicity), 일관성(Consistency), 격리성(Isolation), 지속성(Durability)을 의미하며, 데이터 무결성과 신뢰성을 보장한다.

-----------------------------------------

문제 6. 격리성(Isolation)의 개념과 대표적인 격리 수준을 4가지 설명하시오. (서술형)

**정답** 격리성은 트랜잭션이 독립적으로 수행되어야 하며, 동시에 실행될 때 서로 간섭하지 않도록 보장하는 성질이다. 대표적인 격리 수준은 다음과 같다.
1. Read Uncommitted - 커밋되지 않은 데이터를 읽을 수 있으며, 더티 리드가 발생 가능
2. Read Committed - 커밋된 데이터만 읽을 수 있으며, 더티 리드는 방지됨
3. Repeatable Read - 같은 트랜잭션 내에서 동일한 데이터를 여러 번 조회할 경우 결과가 동일하지만, 팬텀 리드가 발생 가능
4. Serializable - 가장 엄격한 격리 수준으로, 트랜잭션을 순차적으로 실행하는 것과 동일한 결과를 보장함

**해설** 격리 수준이 높을수록 동시성 처리 성능은 떨어지지만, 데이터 정합성이 향상된다.

-----------------------------------------

문제 7. 인덱스에서 Clustered Index와 Non-Clustered Index의 차이를 정렬 관점에서 설명하시오. (서술형)

**정답** Clustered Index는 테이블 데이터 자체가 인덱스 순서대로 정렬되어 저장되며, 물리적으로 데이터 정렬이 유지된다. 반면, Non-Clustered Index는 인덱스만 정렬되고 실제 데이터는 따로 저장되므로, 인덱스를 검색한 후 추가적인 테이블 조회가 필요하다.
**해설** Clustered Index는 테이블 당 하나만 가질 수 있으며, 보통 Primary Key로 설정된다. Non-Clustered Index는 여러 개 생성 가능하지만, 데이터를 찾기 위해 추가적인 I/O 비용이 발생할 수 있다.

-----------------------------------------

문제 8. 다음 빈 칸을 채우시오. (주관식)
데이터베이스에서 인덱스를 사용할 때, 인덱스에 포함된 컬럼의 크기가 클수록 인덱스의 크기도 증가하므로 가능한 한 컬럼의 크기를 작게 유지하는 것이 중요하다. 이를 통해 _______ 을(를) 줄일 수 있다.

**정답** 디스크 I/O 비용
**해설** 인덱스 크기가 커지면 캐싱 효율이 낮아지고 디스크에서 읽어야 할 데이터 양이 증가하여 성능이 저하될 수 있다.

-----------------------------------------

문제 9. 데이터베이스에서 트랜잭션이 롤백될 경우 발생할 수 있는 현상 중 더티 리드(Dirty Read), 반복 불가능한 읽기(Non-Repeatable Read), 팬텀 리드(Phantom Read)의 차이를 설명하시오. (서술형)

**정답**
- **더티 리드**: 한 트랜잭션이 커밋되지 않은 데이터를 읽는 현상
- **반복 불가능한 읽기**: 같은 트랜잭션에서 동일한 데이터를 두 번 조회했을 때 값이 다르게 나오는 현상
- **팬텀 리드**: 한 트랜잭션이 동일한 조건으로 조회했을 때, 중간에 다른 트랜잭션이 새로운 행을 삽입하여 결과가 달라지는 현상

**해설** 트랜잭션의 격리 수준에 따라 이러한 현상이 방지될 수 있으며, 가장 높은 수준인 SERIALIZABLE에서는 모든 현상이 방지된다.

-----------------------------------------

문제 10. 다음 중 클러스터형 인덱스가 아닌 것을 고르시오. (객관식)
A) Primary Key
B) Unique Index
C) Non-Clustered Index
D) 데이터가 정렬되어 저장되는 인덱스

**정답** C) Non-Clustered Index
**해설** Non-Clustered Index는 데이터의 저장 순서와 무관하며, 데이터가 따로 저장되어 추가적인 ROWID 조회가 필요하다.

-----------------------------------------

