# 문제 파일 (Exam Questions)
# 작성일: 2025-02-14
# 담당자: 박설진

=========================================

문제 1. 다음 내용 중 옳지 않은 것을 모두 고르세요

1. 전이중화 통신(Full-duplex communication)에서는 두 장치가 동시에 데이터를 주고받을 수 있다.
2. 반이중화 통신(Half-duplex communication)에서는 데이터 전송 중 한쪽만 데이터를 송수신할 수 있다.
3. CSMA/CD는 유선 네트워크에서 주로 사용되며, 충돌이 발생하면 이를 감지하고 재전송을 시도한다.
4. CSMA/CA는 무선 네트워크에서 사용되며, 충돌을 방지하기 위해 데이터를 전송하기 전에 RTS/CTS 절차를 사용한다.
5. CSMA/CD와 CSMA/CA 모두 동일한 방식으로 충돌을 방지하고 전송을 관리한다.
6. 반이중화 통신에서 한 장치가 데이터를 전송할 때 다른 장치는 수신만 할 수 있다.
7. 전이중화 통신에서는 네트워크 효율성이 높고, 실시간 통신에 적합하다.

A. 1, 5
B. 2, 5
C. 1, 4
D. 3, 6
E. 2, 6

**정답**: B. 2, 5
**해설**: 
2번: 반이중화 통신에서는 한 번에 한 방향으로만 데이터를 송수신할 수 있으며, 다른 방향으로 송수신할 때는 대기해야 합니다.
5번: CSMA/CD와 CSMA/CA는 충돌을 처리하는 방식이 다릅니다. CSMA/CD는 충돌을 감지하고 재전송하는 방식인 반면, CSMA/CA는 충돌을 방지하기 위해 RTS/CTS 프로토콜을 사용합니다.

-----------------------------------------

문제 2. 블랙스완 프로토콜이란 무엇인가요?

**해설**: 
블랙스완 프로토콜(Black Swan Protocol)은 네트워크나 분산 시스템에서 예측할 수 없는 극단적인 사건(블랙스완 사건)이 발생했을 때 이를 처리하는 방법을 다룬 프로토콜입니다. 블랙스완 사건은 예측할 수 없고, 발생 확률이 낮지만 발생하면 엄청난 영향을 미치는 사건을 의미합니다. 예를 들어, 2008년 글로벌 금융위기나 자연 재해와 같은 사건들이 이에 해당할 수 있습니다.

블랙스완 프로토콜의 핵심 개념은 극단적인 이벤트가 발생할 가능성에 대비해 시스템을 설계하고, 그 발생 시 시스템이 자동으로 적응할 수 있도록 만드는 것입니다. 이 프로토콜은 보통 복원력(resilience)과 자기 조정(self-adjustment)을 강조합니다.


-----------------------------------------

문제 3. REST API의 주요 특징 다섯가지를 서술하시오

**정답**: Uniform Interface, Stateless, Cacheable, Client-server 구조, Layerd System

-----------------------------------------

문제 4. 다음 중 REST API의 주요 특징에 대한 설명으로 옳지 않은 것을 모두 고르세요

1. Uniform Interface는 클라이언트와 서버 간의 명확하고 일관된 인터페이스를 제공하여, 클라이언트가 서버의 세부 구현에 의존하지 않도록 한다.
2. Stateless는 클라이언트의 상태를 서버에서 저장하고, 클라이언트는 서버에 요청할 때마다 상태 정보를 함께 보내야 한다.
3. Cacheable은 서버가 응답에 캐시 정보를 반드시 포함하여, 동일한 요청에 대해 클라이언트가 이전 응답을 재사용할 수 있게 한다.
4. Client-Server 구조에서는 클라이언트와 서버가 명확히 분리되어 각자의 역할을 수행하며, 서로 독립적으로 동작한다.
5. Layered System은 네트워크가 여러 계층으로 구성되어 있어, 각 계층은 독립적으로 관리되고 클라이언트는 최종 계층만을 신경 쓴다.

A. 2, 3
B. 1, 4
C. 2, 5
D. 1, 3
E. 4, 5

**정답**: A. 2, 3
**해설**:
2번: Stateless는 서버가 클라이언트의 상태를 저장하지 않는 원칙으로, 클라이언트는 요청할 때마다 필요한 모든 정보를 함께 보내야 합니다. 서버는 상태 정보를 저장하지 않으므로 클라이언트는 상태를 함께 보내지 않아도 됩니다.
3번: Cacheable은 서버의 응답에 캐시 가능 여부를 명시하는 속성으로, 서버가 응답을 캐시 가능하다고 명시해야 클라이언트가 이를 재사용할 수 있습니다. 따라서 "서버가 응답에 캐시 정보를 포함"하는 설명은 틀린 것입니다.

-----------------------------------------

문제 5. 브라우저의 렌더링 과정에 대한 설명으로 옳지 않은 것 고르세요.

1. 브라우저가 HTML 파일을 요청하면, 서버는 HTML을 클라이언트에 반환하고, 브라우저는 이를 파싱하여 DOM 트리를 생성한다.
2. DOM 트리와 CSSOM 트리가 결합되어 렌더 트리가 생성되며, 이 렌더 트리는 브라우저 화면에 표시될 요소들을 결정한다.
3. 렌더 트리는 브라우저의 그래픽 처리 장치(GPU)가 계산을 완료한 후 디스플레이에 표시된다.
4. 브라우저는 렌더링 중에 레이아웃 계산을 통해 각 요소의 정확한 위치를 결정한 후 화면에 출력한다.

**정답**: 3번
**해설**: 
3번: 렌더 트리는 브라우저의 그래픽 처리 장치(GPU)가 아니라, CPU에서 주로 처리됩니다. GPU는 최종 화면을 그리는 데 도움을 주지만, 렌더 트리 계산 및 레이아웃 계산은 CPU에서 수행됩니다. GPU는 레이아웃 계산이 완료된 후 화면에 출력하는 작업을 담당합니다.


-----------------------------------------

문제 6. 검색창에 www.naver.com을 쳤을 때 일어나는 과정에 대해 설명하시오 

**해설**: 리다이렉트, 캐싱, DNS, IP 라우팅 & ARP, TCP 연결 구축을 거쳐 요청, 응답이 일어나는 TTFB(Time to First Byte)가 시작되고 이 후 컨텐츠를 다운받게 되고 이 후 브라우저렌더링 과정을 거쳐 네이버라는 화면이 나타나게 됩니다.

-----------------------------------------

문제 7. CORS란 무엇인지 설명하세요

**해설**: 
HTTP 헤더 기반으로 브라우저가 다른 오리진에 대한 리소스 로드를 허용할 지 말 지에 대한 메커니즘입니다
-----------------------------------------

문제 8. 네이글 알고리즘에 대해 설명하세요

**해설**: 
네트워크의 효율성을 높이기 위해 네트워크를 통해 전송되어야 하는 패킷의 수를 줄이고, 적은 양의 데이터를 자주 보내면 발생되는 대역폭 낭비를 막아 주는 알고리즘 입니다.
패킷 보낼 때 고정 크기 버퍼에 모아두고, 버퍼가 어느정도 차면 그 때 보내고 다시 ACK 오면 버퍼에 찬 데이터를 보내는 방법으로 네트워크 오버헤드를 감소 시킬 수 있지만 지연시간이 증가 한다는 단점이 있습니다. 

-----------------------------------------

문제 9. HTTP의 멱등성에 대해 설명하시오 

**해설**: 
클라이언트가 하나의 요청이 아닌 여러번 동일한 요청을 보냈을 때, 서버가 같은 상태를 가지는 것을 의미합니다. 멱등성을 잘 고려하여 설계해야 시스템의 유지보수성과 일관성을 증가시킬 수 있습니다. 

-----------------------------------------

문제 10. 다음 중 HTTP 멱등성을 가지는 메서드와 가지지 않는 메서드에 대한 설명으로 옳지 않은 것을 모두 고르세요.

1. GET 메서드는 멱등성을 가지며, 여러 번 요청해도 동일한 결과를 반환한다.
2. POST 메서드는 멱등성을 가지지 않으며, 동일한 요청을 여러 번 보내면 데이터가 중복될 수 있다.
3. PUT 메서드는 멱등성을 가지며, 동일한 데이터를 여러 번 업데이트해도 결과는 동일하다.
4. DELETE 메서드는 멱등성을 가지며, 이미 삭제된 자원을 다시 삭제해도 서버 상태는 변하지 않는다.
5. PATCH 메서드는 멱등성을 가지지 않으며, 동일한 요청을 여러 번 보내면 자원이 여러 번 수정될 수 있다.

A. 2, 5
B. 1, 4
C. 3, 5
D. 1, 2
E. 3, 4

**정답**: A. 2, 5
**해설**:
2번: POST는 멱등성을 가지지 않으며, 동일한 요청을 여러 번 보낼 경우 데이터가 중복될 수 있습니다. POST는 일반적으로 자원을 생성하는 데 사용되므로, 여러 번 요청하면 새로운 자원이 생성될 수 있습니다.

5번: PATCH는 부분 수정을 하는 메서드로, 멱등성을 가지지 않으며 동일한 요청을 여러 번 보내면 자원의 상태가 중복 수정될 수 있습니다.